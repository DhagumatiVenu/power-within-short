name: Run Python Script Daily

on:
  schedule:
    - cron: '0 8 * * *' # Runs daily at 8 AM UTC
  workflow_dispatch:  # Allows manual trigger

jobs:
  upload:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # ✅ Allows GitHub Actions to modify files in the repo
    steps:
      - name: Checkout repository manually
        run: git clone https://github.com/DhagumatiVenu/power-within-short.git .
        with:
          persist-credentials: true  # ✅ Ensures changes can be pushed back
      
      - name: Set up Python manually
        run: sudo apt update && sudo apt install python3 python3-pip -y
      
      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Set Environment Variables
        run: |
          echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" >> $GITHUB_ENV
          echo "TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }}" >> $GITHUB_ENV

      - name: Create `credentials.json`
        run: echo '${{ secrets.YOUTUBE_CREDENTIALS }}' > credentials.json

      - name: Run auto_upload.py script
        run: python auto_upload.py

      - name: Debug Time Check
        run: date -u


      - name: Commit and Push Changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Ignore .pyc files to prevent merge conflicts
          echo "__pycache__/" >> .gitignore
          echo "*.pyc" >> .gitignore
          
          git add .gitignore  # ✅ Ensure Git ignores unnecessary files
          git add -A
          git commit -m "Moved uploaded videos to archive" || echo "No changes to commit"
          
          # Fetch latest changes and resolve conflicts automatically
          git pull --rebase --strategy-option=theirs origin main || git rebase --skip
          
          git push origin main

